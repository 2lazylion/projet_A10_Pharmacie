package entite;
// Generated 8-May-2020 12:51:34 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Categories generated by hbm2java
 */
@Entity
@Table(name="CATEGORIES"
    ,schema="A18PROJET3"
    , uniqueConstraints = @UniqueConstraint(columnNames="NOM") 
)
public class Categories  implements java.io.Serializable {


     private byte idcategorie;
     private String nom;
     private String description;
     private Set<Medicament> medicaments = new HashSet<Medicament>(0);

    public Categories() {
    }

	
    public Categories(byte idcategorie, String nom) {
        this.idcategorie = idcategorie;
        this.nom = nom;
    }
    public Categories(byte idcategorie, String nom, String description, Set<Medicament> medicaments) {
       this.idcategorie = idcategorie;
       this.nom = nom;
       this.description = description;
       this.medicaments = medicaments;
    }
   
     @Id 

    
    @Column(name="IDCATEGORIE", unique=true, nullable=false, precision=2, scale=0)
    public byte getIdcategorie() {
        return this.idcategorie;
    }
    
    public void setIdcategorie(byte idcategorie) {
        this.idcategorie = idcategorie;
    }

    
    @Column(name="NOM", unique=true, nullable=false, length=100)
    public String getNom() {
        return this.nom;
    }
    
    public void setNom(String nom) {
        this.nom = nom;
    }

    
    @Column(name="DESCRIPTION")
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="categories")
    public Set<Medicament> getMedicaments() {
        return this.medicaments;
    }
    
    public void setMedicaments(Set<Medicament> medicaments) {
        this.medicaments = medicaments;
    }




}


